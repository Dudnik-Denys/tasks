import asyncio

# Пример анкеты.
# Полный JSON с анкетами вшит в задачу
data = [
    {
        "Имя": "Sarah",
        "Фамилия": "Lewis",
        "Возраст": 54,
        "Навыки": 10,
        "Страна проживания": "Tuvalu",
        "Город проживания": "North Heathertown",
        "Уровень секретности": 1,
        "Псевдоним": "michelestanton",
        "Профессия": "Консультант по безопасности",
        "Владение иностранными языками": {
            "Английский": "Свободно"
        },
        "Специализированные навыки": "Взлом, слежка",
        "Образование": "Военная академия",
        "Предыдущие места работы": "Неизвестно",
        "Хобби и интересы": "Фотография, путешествия",
        "Членство в организациях": "Неизвестно",
        "История путешествий": "Многочисленные страны",
        "Наличие дипломатического паспорта": True,
        "Биометрические данные": "Доступны",
        "Семейное положение": "Неизвестно",
        "Наличие специализированного оборудования": "Есть",
        "Срок доступа": "5857 часов",
        "Тайные операции": [
            "Операция 'Кондор'",
            "Операция 'Снег'"
        ],
        "Скрытые навыки": [
            "Мастер перевоплощений",
            "Эксперт по криптографии"
        ],
        "Контакты в иностранных спецслужбах": "Turner, Craig and Ortiz",
        "Специализация": "Контрразведка"
    },
]


async def check_access(person: dict) -> None:
    await asyncio.sleep(person["Уровень секретности"])
    if not person["Срок доступа"]:
        raise ValueError(f'Ошибка доступа: У участника {person["Имя"]} {person["Фамилия"]} '
                         f'срок доступа истек или не указан.')
    print(f'Участник {person["Имя"]} {person["Фамилия"]} имеет действующий доступ. '
          f'Продолжительность доступа: {person["Срок доступа"]}')


async def main() -> None:
    tasks = [asyncio.create_task(check_access(person), name=f'{person["Имя"]} {person["Фамилия"]}') for person in data]
    done, pending = await asyncio.wait(tasks, return_when="FIRST_EXCEPTION")

    if any(task.exception() for task in done):
        for task in done:
            if task.exception():
                print(task.exception())
        for task in pending:
            task.cancel()
            print(f'Доступ участника {task.get_name()} отменен из-за критической ошибки.')


asyncio.run(main())
